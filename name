#!/bin/sh
echo "InstaSafe Installer for Linux"
echo "Usage: sudo sh InstaSafe-Agent.sh"
if [ `id -u` != 0 ]; then
 echo "Root permission is needed to run this installer!"
 exit 1
fi
echo "Setting up InstaSafe would require Internet connectivity"
echo "Identifying version of Linux..."
if [ $(grep -c Ubuntu /etc/issue) -ne 0 ] ; then
	 echo "Installing dependencies for Ubuntu"
	 apt-get install openvpn -y --force-yes || { echo "Could not install the dependencies required";  exit 1; } 
	 apt-get install wget -y --force-yes 
	 wget -O /etc/init.d/instasafe http://repo.instasafe.net/pub/instasafe_u >/dev/null 2>&1
	 chmod 700 /etc/init.d/instasafe
	 update-rc.d instasafe defaults
elif [ $(grep -c Mint /etc/issue) -ne 0 ] ; then
	 echo "Installing dependencies for Ubuntu"
	 apt-get install openvpn -y --force-yes || { echo "Could not install the dependencies required";  exit 1; } 
	 apt-get install wget -y --force-yes 
	 wget -O /etc/init.d/instasafe http://repo.instasafe.net/pub/instasafe_u >/dev/null 2>&1
	 chmod 700 /etc/init.d/instasafe
	 update-rc.d instasafe defaults
elif [ $(grep -c Debian /etc/issue) -ne 0 ] ; then
	 echo "Installing dependencies for Debian"
	 apt-get update
	 apt-get install openvpn -y --force-yes || { echo "Could not install the dependencies required" ;exit 1; }
elif [ -s /etc/redhat-release ]; then
                yum -y install wget
                wget -O /etc/init.d/instasafe http://repo.instasafe.net/pub/instasafe_r >/dev/null 2>&1
	        chmod 700 /etc/init.d/instasafe
	        chkconfig --add instasafe
                chkconfig instasafe on
	if [ $(yum -y install openvpn | grep -c "No package openvpn") -ne 0 ]; then
	        echo "Trying to update the repositories..."
		arch=`uname -i`
		echo "Detected architecture is $arch"
		MAJOR=$(uname -r | grep -o 'el[0-9]')
		if [ $MAJOR == "el5" ]; then
			rpm -Uvh http://repo.instasafe.net/pub/epel-release-5-4.noarch.rpm
			rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm
		elif [ $MAJOR == "el6" ]; then
                        rpm -Uvh http://repo.instasafe.net/pub/epel-release-6-8.noarch.rpm
                        rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
                elif [ $MAJOR == "el7" ]; then
                        rpm -Uvh http://repo.instasafe.net/pub/epel-release-7-9.noarch.rpm
                        rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
                fi
		echo "A new repository is installed"
		yum check-update 
		yum -y install openvpn || { echo "Could not install the dependencies required for InstaSafe" ;exit 1; }
	        echo "Installed the dependencies"
	fi
elif [ -s /etc/system-release ] && [ $(grep -c Amazon /etc/system-release) -ne 0 ] ; then
        echo " Installing Dependencies for Amazon Linux "
        yum -y install openvpn wget
        wget -O /etc/init.d/instasafe http://repo.instasafe.net/pub/instasafe_r >/dev/null 2>&1
        chmod 700 /etc/init.d/instasafe
        chkconfig --add instasafe
        chkconfig instasafe on
elif [ -s /etc/SuSE-release ] && [ $(grep -c SUSE /etc/SuSE-release) -ne 0 ] ; then
        echo " Installing Dependencies for Suze Linux "
        zypper -n in openvpn 
        zypper -n in wget
        wget -O /etc/init.d/instasafe http://repo.instasafe.net/pub/instasafe_s > /dev/null 2>&1
        chmod 700 /etc/init.d/instasafe
        chkconfig --add instasafe
        chkconfig instasafe on
fi
if [ ! -d /etc/instasafe/ ]; then
    mkdir -p /etc/instasafe/
fi
echo "Configuring InstaSafe..."
sysctl net.ipv4.ip_forward=1
intf=`route -n|grep ^0.0.0.0|awk -F' ' {'print $8'}`
echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
iptables -t nat -A POSTROUTING -o $intf -j MASQUERADE
iptables-save > /etc/iptables-save
echo "
# Config file for ajit
daemon
dev tun
keepalive 10 180
persist-key
nobind
client
comp-lzo
server-poll-timeout 30
auth-retry nointeract
script-security 3
route-delay 30 30
reneg-sec 0
remote-cert-tls server
float
cipher aes-128-cbc
<cert>
-----BEGIN CERTIFICATE-----
MIIErTCCA5WgAwIBAgICDP0wDQYJKoZIhvcNAQELBQAwgcAxCzAJBgNVBAYTAklO
MQswCQYDVQQIEwJLQTESMBAGA1UEBxMJQmFuZ2Fsb3JlMSkwJwYDVQQKEyBJbnN0
YVNhZmUgVGVjaG5vbG9naWVzIFB2dC4gTFRkLjEsMCoGA1UEAxMjSW5zdGFTYWZl
IFRlY2hub2xvZ2llcyBQdnQuIExUZC4gQ0ExFTATBgNVBCkTDEluc3RhU2FmZSBD
QTEgMB4GCSqGSIb3DQEJARYRb3BzQGluc3Rhc2FmZS5jb20wHhcNMTgwOTExMDc0
ODQyWhcNMjgwOTA4MDc0ODQyWjB7MQswCQYDVQQGEwJJTjELMAkGA1UECBMCS0Ex
EjAQBgNVBAcTCUJhbmdhbG9yZTEPMA0GA1UEChMGcm9zaGFuMRQwEgYDVQQDFAth
aml0QHJvc2hhbjEkMCIGCSqGSIb3DQEJARYVc3VwcG9ydEBpbnN0YXNhZmUuY29t
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC5k8RF7/oOstnkKEFqqU0zevvE
MxrJvHa7zvymc+oNrLmZKlqHSAf0WZpxJfJZzVY3A/er/02X57hkb2jvgmcIcaRK
n43SXZCSflHucij/B+Ogw5eQMnOZMUXBzOmhX5OpYqQ2ZJHnv6gkDTw9NUOXLyYr
uuvXaDHJ919yPIQo9QIDAQABo4IBdzCCAXMwCQYDVR0TBAIwADAtBglghkgBhvhC
AQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1UdDgQWBBQA
MXan6xEBBPRHGTsBrGhBOcQ0TjCB9QYDVR0jBIHtMIHqgBQBKtsIrZLPi+m8e6tA
jy/+HXabVKGBxqSBwzCBwDELMAkGA1UEBhMCSU4xCzAJBgNVBAgTAktBMRIwEAYD
VQQHEwlCYW5nYWxvcmUxKTAnBgNVBAoTIEluc3RhU2FmZSBUZWNobm9sb2dpZXMg
UHZ0LiBMVGQuMSwwKgYDVQQDEyNJbnN0YVNhZmUgVGVjaG5vbG9naWVzIFB2dC4g
TFRkLiBDQTEVMBMGA1UEKRMMSW5zdGFTYWZlIENBMSAwHgYJKoZIhvcNAQkBFhFv
cHNAaW5zdGFzYWZlLmNvbYIJAJh/b2EhEDj2MBMGA1UdJQQMMAoGCCsGAQUFBwMC
MAsGA1UdDwQEAwIHgDANBgkqhkiG9w0BAQsFAAOCAQEANGhNBybMkkuZcbb3Uuiz
xKqkjmkfYUuZ5OqR86cHNJIJ6SO9R92COZWtVuOoZWCtQNa3JyltPpa/BzoByS21
uqg5Z6J179KPmZPKQLBG0UKocdsih9oOkbUyPKn6Nsyosu96Wt+gU+ADcZHFhglV
ClPkCPaKuLUZKp1PABKrcvXWf97a3a14TCgiY7WXFBxSZwlKe+aFa64vIv4N/Ym4
C4RgJP/pgQ1NfBDazeVOFAlP7YIfU9nBdQqpGd0iLjkcoL9+eB87Cn704UrHiE+e
3KY4YDDvoBKdEZCGbt+gKLvLYTLr6jcWVFy8pzAR22Fm2B+l6dppCbLOZXfDTUrl
Yw==
-----END CERTIFICATE-----
</cert>
<key>
-----BEGIN PRIVATE KEY-----
MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBALmTxEXv+g6y2eQo
QWqpTTN6+8QzGsm8drvO/KZz6g2suZkqWodIB/RZmnEl8lnNVjcD96v/TZfnuGRv
aO+CZwhxpEqfjdJdkJJ+Ue5yKP8H46DDl5Ayc5kxRcHM6aFfk6lipDZkkee/qCQN
PD01Q5cvJiu669doMcn3X3I8hCj1AgMBAAECgYEAsNMZ28HztHm6oGmzG1zCUOFI
cAR56+uF/yIVHs2oIOuJ1WXD6M87tRqDzHhp2iOLmNRQ9DRJzQpgamK1zDGm1YdK
NmAEoDwHShEEwjVGFgoxFxOhLUVIIyYlHFPypJHcjTOFD/vdBUlw2xPpjIldES2K
5NtJPvQ68EpF0RdxISkCQQDhQtsSxBkys+dYS6tpYkY7ZAeloYhZsHNNw88B+1RZ
WeEmldqD0L9LYklqbG6MV48HY9K2hSKk+b1h/TgmVspXAkEA0uadZfYSNPDMAlrl
XikKNu8utNTUMMxcrH+3YLdIbC09zQwwLEv41P8zTlFPWVOwztb9yx85urE82Ljr
HbgvkwJBALdtb2LKmBI3eKzngT8hLTtzat6uuI8AJgQu7EQa2kaf770xzWwE8aB6
+nlUrnhNXESSPqUtqFZanqJKRgzCI6UCQD9MhDVUE8bb9v9F9M28F5rBUw1nS4CR
9ca4Vnuqxwvg0Em4vMSu0LJtHiMFeIFhAxIxqN7MMnF8PLz3U2oKHA0CQQCJaTCm
ss24LRqaJCACKFAnCBRy+KCeze7C0t5bMfv8ZgrKQL8k0lgWr4KoLLUoay2X0AMg
vzpQlGiNxo9SYgdt
-----END PRIVATE KEY-----
</key>
<ca>
-----BEGIN CERTIFICATE-----
MIIFUjCCBDqgAwIBAgIJAJh/b2EhEDj2MA0GCSqGSIb3DQEBCwUAMIHAMQswCQYD
VQQGEwJJTjELMAkGA1UECBMCS0ExEjAQBgNVBAcTCUJhbmdhbG9yZTEpMCcGA1UE
ChMgSW5zdGFTYWZlIFRlY2hub2xvZ2llcyBQdnQuIExUZC4xLDAqBgNVBAMTI0lu
c3RhU2FmZSBUZWNobm9sb2dpZXMgUHZ0LiBMVGQuIENBMRUwEwYDVQQpEwxJbnN0
YVNhZmUgQ0ExIDAeBgkqhkiG9w0BCQEWEW9wc0BpbnN0YXNhZmUuY29tMB4XDTE3
MDkxNDA5MDEyMloXDTI3MDkxMjA5MDEyMlowgcAxCzAJBgNVBAYTAklOMQswCQYD
VQQIEwJLQTESMBAGA1UEBxMJQmFuZ2Fsb3JlMSkwJwYDVQQKEyBJbnN0YVNhZmUg
VGVjaG5vbG9naWVzIFB2dC4gTFRkLjEsMCoGA1UEAxMjSW5zdGFTYWZlIFRlY2hu
b2xvZ2llcyBQdnQuIExUZC4gQ0ExFTATBgNVBCkTDEluc3RhU2FmZSBDQTEgMB4G
CSqGSIb3DQEJARYRb3BzQGluc3Rhc2FmZS5jb20wggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQDess9gYKzTo+2HG0z8D0fUqaIc17Ju++v2km0ay4nkNkuS
AMeCkXgQYsLBbJJ+GEz8pyYGAhqAH4kI7kPhZyqqLO5xHPe70XteBGj9pusmwZOF
pYL8rh7vLZcAKsPPcbCtY9sZqN6rMs9LKpwBbBQSX/r2kVZZtUr1lOs+6zqv1SD/
6vTknDYT7axYmvaDd9KRzDmVzamLnmyjn20wRUSWGz8UvimPFV9IxX1f0COsxlcL
dyYcK2OT1hyfJ3pomzZUPirF37/gY9QB5J3q9XpJhBjFhO8xntBT/F7YDIc1MFAd
ouu+x++d+xWupDE59rv5t9Tu69x7Tji1/EyPUFlTAgMBAAGjggFLMIIBRzAdBgNV
HQ4EFgQUASrbCK2Sz4vpvHurQI8v/h12m1QwgfUGA1UdIwSB7TCB6oAUASrbCK2S
z4vpvHurQI8v/h12m1ShgcakgcMwgcAxCzAJBgNVBAYTAklOMQswCQYDVQQIEwJL
QTESMBAGA1UEBxMJQmFuZ2Fsb3JlMSkwJwYDVQQKEyBJbnN0YVNhZmUgVGVjaG5v
bG9naWVzIFB2dC4gTFRkLjEsMCoGA1UEAxMjSW5zdGFTYWZlIFRlY2hub2xvZ2ll
cyBQdnQuIExUZC4gQ0ExFTATBgNVBCkTDEluc3RhU2FmZSBDQTEgMB4GCSqGSIb3
DQEJARYRb3BzQGluc3Rhc2FmZS5jb22CCQCYf29hIRA49jAMBgNVHRMEBTADAQH/
MCAGA1UdEQQZMBeBFXN1cHBvcnRAaW5zdGFzYWZlLmNvbTANBgkqhkiG9w0BAQsF
AAOCAQEAl4+sQn/I03vdPQDNnKNWiXdv4B+x74exovoC1k3KVDzVtHodGYzm2+eN
zXYNYe+lziXb79d6NtZrQPGfAO0270VbbpdOxwQz9J/sedmycO5u3zYSF8USRT61
QkjI/OR/1HLpAADYXX3lMFHwkRDSuDN6sHTIMyc//8uFRv1mwBzC9e+4njitaphr
UFx6FKV/TQaHKxa5SQbvlSlXeImjHzN0DrY4SEcpHope8XMKYlHBWgrurfSRpOKD
dd4M68nYV/CChHC8vmO/lzsFHt1nsicbqbUAaq511Snjxy1IRLbVLMTE/PZ3oiGT
aLThcP/FYUuZA4OnWsMIA/Kh6fMRtw==
-----END CERTIFICATE-----
</ca>
<tls-auth>
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
7624fbd433c019cf26c36ba4e13ee188
c19982257b887ef2510d2441c256a273
61e3a8b37df713af500081eed31303c2
d16654d2ba5623a4cbaa5f22f7d3a9eb
32643b4bf43a35b7f12017dee55d8f19
c25b52c4b8d083eaf838bebd967d48f4
26154fb1be7183b3f754b6615ec57aab
9a0d9bb46877991c475c4136e86c7880
49e77639da1d28e788a030fca0f66390
de330282ce86d92edad35c1fb2f027b0
83e9e9a9420f453d82cb47887780c42e
d2362e800918e1710fda8adedb0f5d87
9f0208e8be3a15a3621ae4730435ba4e
0dbe089ac016b52793e4452ad6dbef34
76d162314867fadc3426c55508a92b1d
fa3a96c41a5fee578475f415ba263ca0
-----END OpenVPN Static key V1-----
</tls-auth>


remote isaawmum1.instasafe.net 1384 udp

" > /etc/instasafe/roshan.conf ||  echo "Could not configure InstaSafe properly"
echo "Configuration Done"
echo "Installation Complete."
echo "Starting InstaSafe Service..."
echo "This action may prompt for the username/password."
echo "The username/password would be the same as entered on myInstaSafe portal"
service instasafe restart || /etc/init.d/instasafe restart

